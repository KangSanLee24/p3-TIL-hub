import express from "express";
import requireAccessToken from "../middlewares/require-access-token.middleware.js";
import { prisma } from "../utils/prisma/index.js";

const router = express.Router();

// 내 정보 조회
router.get("/", requireAccessToken, async (req, res, next) => {
  try {
    const { userId } = req.user;

    const user = await prisma.user.findUnique({
      where: { userId },
      include: {
        UserInfo: {
          select: {
            description: true,
            profileImage: true,
            level: true,
            trackNumber: true,
          },
        },
      },
    });
    const { name, email, phoneNumber, role, createdAt, updatedAt } = user;
    const { description, profileImage, level, trackNumber } = user.UserInfo;
    return res.status(200).json({
      status: 200,
      message: "내 정보 조회에 성공했습니다.",
      data: {
        name,
        email,
        phoneNumber,
        role,
        createdAt,
        updatedAt,
        description,
        profileImage,
        level,
        trackNumber,
      },
    });
  } catch (error) {
    next(error);
  }
});

// // 내 정보 수정 이메일 변경 금지
// router.put("/", requireAccessToken, async (req, res, next) => {
//   try {
//     const { userId } = req.user;
//     const { name, email, phoneNumber, description, profileImage } = req.body;

//     // Prisma를 사용하여 사용자 정보 업데이트
//     const updatedUser = await prisma.user.update({
//       where: { userId },
//       data: {
//         name,
//         phoneNumber,
//         UserInfo: {
//           update: {
//             description,
//             profileImage,
//           },
//         },
//       },
//       include: {
//         UserInfo: true,
//       },
//     });
//     return res.status(200).json({
//       status: 200,
//       message: "내 정보 수정에 성공했습니다.",
//       data: updatedUser,
//     });
//   } catch (error) {
//     next(error);
//   }
// });
router.put("/", requireAccessToken, async (req, res, next) => {
  try {
    const { userId } = req.user;
    const { name, phoneNumber, description, profileImage } = req.body;

    // Prisma를 사용하여 사용자 정보 업데이트
    const updatedUser = await prisma.user.update({
      where: { userId },
      data: {
        name,
        phoneNumber,
        UserInfo: {
          update: {
            description,
            profileImage,
          },
        },
      },
      include: {
        UserInfo: true,
      },
    });

    return res.status(200).json({
      status: 200,
      message: "내 정보 수정에 성공했습니다.",
      data: {
        name: updatedUser.name,
        phoneNumber: updatedUser.phoneNumber,
        description: updatedUser.UserInfo.description,
        profileImage: updatedUser.UserInfo.profileImage,
      },
    });
  } catch (error) {
    next(error);
  }
});

// // router.put("/", requireAccessToken, async (req, res, next) => {
// //   try {
// //     const { userId } = req.user;
// //     const { name, email, phoneNumber, description, profileImage } = req.body;

// //     // Prisma를 사용하여 사용자 정보 업데이트
// //     const updatedUser = await prisma.user.update({
// //       where: { userId },
// //       data: {
// //         name,
// //         email,
// //         phoneNumber,
// //         UserInfo: {
// //           update: {
// //             where: {
// //               userId,
// //             },
// //             data: {
// //               description,
// //               profileImage,
// //             },
// //           },
// //         },
// //       },
// //       include: {
// //         UserInfo: true,
// //       },
// //       omit: { password: true, isDeleted: true },
// //     });

// //     return res.status(200).json({
// //       status: 200,
// //       message: "내 정보 수정에 성공했습니다.",
// //       data: updatedUser,
// //     });
// //   } catch (error) {
// //     next(error);
// //   }
// // });

// router.put("/", requireAccessToken, async (req, res, next) => {
//   try {
//     const { userId } = req.user;
//     const { name, email, phoneNumber, description, profileImage, trackNumber } =
//       req.body;

//     // Prisma를 사용하여 사용자 정보 업데이트
//     const updatedUser = await prisma.user.update({
//       where: { userId },
//       data: {
//         name,
//         email,
//         phoneNumber,
//         UserInfo: {
//           update: {
//             where: {
//               userId,
//             },
//             data: {
//               description,
//               profileImage,
//               trackNumber,
//             },
//           },
//         },
//       },
//       include: {
//         UserInfo: true,
//       },
//       omit: {
//         password: true,
//         isDeleted: true,
//         createdAt: true,
//         updatedAt: true,
//         role: true,
//         userId: true,
//       },
//     });

//     // UserInfo 데이터를 별도로 추출하여 반환
//     const { UserInfo, ...userData } = updatedUser;
//     return res.status(200).json({
//       status: 200,
//       message: "내 정보 수정에 성공했습니다.",
//       data: {
//         ...userData,
//         description: UserInfo.description,
//         profileImage: UserInfo.profileImage,
//         trackNumber: UserInfo.trackNumber,
//       },
//     });
//   } catch (error) {
//     next(error);
//   }
// });

export default router;
